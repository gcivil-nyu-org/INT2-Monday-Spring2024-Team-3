--
-- PostgreSQL database dump
--

-- Dumped from database version 16.2 (Debian 16.2-1.pgdg120+2)
-- Dumped by pg_dump version 16.2 (Debian 16.2-1.pgdg120+2)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: admins_userblockstatus; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.admins_userblockstatus (
    id bigint NOT NULL,
    is_blocked boolean NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.admins_userblockstatus OWNER TO nyu_event;

--
-- Name: admins_userblockstatus_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.admins_userblockstatus ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.admins_userblockstatus_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO nyu_event;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO nyu_event;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO nyu_event;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO nyu_event;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO nyu_event;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO nyu_event;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backend_banneduser; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.backend_banneduser (
    id bigint NOT NULL,
    reason text NOT NULL,
    banned_at timestamp with time zone NOT NULL,
    unban_at timestamp with time zone,
    user_id integer NOT NULL
);


ALTER TABLE public.backend_banneduser OWNER TO nyu_event;

--
-- Name: backend_banneduser_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.backend_banneduser ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backend_banneduser_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backend_chat; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.backend_chat (
    id bigint NOT NULL,
    message text NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    receiver_id integer NOT NULL,
    sender_id integer NOT NULL
);


ALTER TABLE public.backend_chat OWNER TO nyu_event;

--
-- Name: backend_chat_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.backend_chat ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backend_chat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backend_event; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.backend_event (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    category character varying(1000) NOT NULL,
    description text NOT NULL,
    open_date date NOT NULL,
    close_date date,
    location character varying(1000) NOT NULL,
    external_link character varying(200) NOT NULL,
    image_url character varying(200) NOT NULL,
    avg_rating double precision
);


ALTER TABLE public.backend_event OWNER TO nyu_event;

--
-- Name: backend_event_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.backend_event ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backend_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backend_profile; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.backend_profile (
    id bigint NOT NULL,
    avatar character varying(100),
    description text,
    user_id integer NOT NULL
);


ALTER TABLE public.backend_profile OWNER TO nyu_event;

--
-- Name: backend_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.backend_profile ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backend_profile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backend_review; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.backend_review (
    id bigint NOT NULL,
    rating integer NOT NULL,
    review_text text NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    event_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.backend_review OWNER TO nyu_event;

--
-- Name: backend_review_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.backend_review ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backend_review_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backend_searchhistory; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.backend_searchhistory (
    id bigint NOT NULL,
    search character varying(100) NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    search_type character varying(10) NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.backend_searchhistory OWNER TO nyu_event;

--
-- Name: backend_searchhistory_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.backend_searchhistory ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backend_searchhistory_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backend_suspendeduser; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.backend_suspendeduser (
    id bigint NOT NULL,
    reason text NOT NULL,
    suspended_at timestamp with time zone NOT NULL,
    unsuspended_at timestamp with time zone,
    is_suspended boolean NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.backend_suspendeduser OWNER TO nyu_event;

--
-- Name: backend_suspendeduser_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.backend_suspendeduser ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backend_suspendeduser_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backend_userevent; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.backend_userevent (
    id bigint NOT NULL,
    saved boolean NOT NULL,
    event_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.backend_userevent OWNER TO nyu_event;

--
-- Name: backend_userevent_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.backend_userevent ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backend_userevent_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO nyu_event;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO nyu_event;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO nyu_event;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: nyu_event
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: nyu_event
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO nyu_event;

--
-- Data for Name: admins_userblockstatus; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.admins_userblockstatus (id, is_blocked, user_id) FROM stdin;
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add event	7	add_event
26	Can change event	7	change_event
27	Can delete event	7	delete_event
28	Can view event	7	view_event
29	Can add user event	8	add_userevent
30	Can change user event	8	change_userevent
31	Can delete user event	8	delete_userevent
32	Can view user event	8	view_userevent
33	Can add review	9	add_review
34	Can change review	9	change_review
35	Can delete review	9	delete_review
36	Can view review	9	view_review
37	Can add chat	10	add_chat
38	Can change chat	10	change_chat
39	Can delete chat	10	delete_chat
40	Can view chat	10	view_chat
41	Can add user profile	11	add_userprofile
42	Can change user profile	11	change_userprofile
43	Can delete user profile	11	delete_userprofile
44	Can view user profile	11	view_userprofile
45	Can add banned user	12	add_banneduser
46	Can change banned user	12	change_banneduser
47	Can delete banned user	12	delete_banneduser
48	Can view banned user	12	view_banneduser
49	Can add blocked user	13	add_blockeduser
50	Can change blocked user	13	change_blockeduser
51	Can delete blocked user	13	delete_blockeduser
52	Can view blocked user	13	view_blockeduser
53	Can add user block status	14	add_userblockstatus
54	Can change user block status	14	change_userblockstatus
55	Can delete user block status	14	delete_userblockstatus
56	Can view user block status	14	view_userblockstatus
57	Can add suspended user	15	add_suspendeduser
58	Can change suspended user	15	change_suspendeduser
59	Can delete suspended user	15	delete_suspendeduser
60	Can view suspended user	15	view_suspendeduser
61	Can add search history	16	add_searchhistory
62	Can change search history	16	change_searchhistory
63	Can delete search history	16	delete_searchhistory
64	Can view search history	16	view_searchhistory
65	Can add profile	17	add_profile
66	Can change profile	17	change_profile
67	Can delete profile	17	delete_profile
68	Can view profile	17	view_profile
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
6	pbkdf2_sha256$600000$dT6SYegxF0XHDRYUWvBa2o$sTQ1xqc512kWHsgX7at3UmpKyBfw73P8pzbvJvVL+mg=	2024-03-24 20:22:55.091198+00	f	fred	Tianfan	Yang	ty2492@nyu.edu	f	t	2024-03-21 17:47:45+00
5	pbkdf2_sha256$600000$TkVZhNw5khY1jlBo9n0070$H7e/XFmsR9rLUUQsp4puijHiWfDRsct/FycXorEMqYc=	2024-03-21 22:38:50.142411+00	t	admin2			admin@example.com	t	t	2024-03-21 17:46:21.915049+00
1	pbkdf2_sha256$720000$omUIuCSOmV6qF4Rq08GpAn$mYSUUVper4SaO/fBEDpiKWLrFjIgwg6P4VRDshd8kFU=	2024-02-26 09:45:45+00	t	admin			123456@gmail.com	t	t	2024-02-26 09:44:18+00
2	pbkdf2_sha256$600000$IG1uY82cw1gsTvgwBeeM14$yT+5IadkRvA2AZ9DTZ5k5Y9twyHUYX4fMfecGHCaH3Q=	2024-03-21 07:57:24.274339+00	t	admin1			admin@example.com	t	t	2024-03-12 06:16:50.102626+00
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: backend_banneduser; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.backend_banneduser (id, reason, banned_at, unban_at, user_id) FROM stdin;
\.


--
-- Data for Name: backend_chat; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.backend_chat (id, message, "timestamp", receiver_id, sender_id) FROM stdin;
\.


--
-- Data for Name: backend_event; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.backend_event (id, title, category, description, open_date, close_date, location, external_link, image_url, avg_rating) FROM stdin;
1	& Juliet	Musical, Original	Created by the Emmy®-winning writer from “Schitt’s Creek,” this hilarious new musical flips the script on the greatest love story ever told. & Juliet asks: what would happen next if Juliet didn’t end it all over Romeo? Get whisked away on a fabulous journey as she ditches her famous ending for a fresh beginning and a second chance at life and love—her way.\n\nJuliet’s new story bursts to life through a playlist of pop anthems as iconic as her name, including Since U Been Gone‚ Roar, Baby One More Time, Larger Than Life‚ That’s The Way It Is, and Can't Stop the Feeling—all from the genius songwriter/producer behind more #1 hits than any other artist this century. Break free of the balcony scene and get into this romantic comedy that proves there’s life after Romeo. The only thing tragic would be missing it.	2022-11-17	\N	Stephen Sondheim Theatre	https://andjulietbroadway.com/	https://www.broadway.org/logos/shows/andjuliet.jpg	\N
2	A Beautiful Noise, The Neil Diamond Musical	Musical, Original	With his first break into songwriting in the 1960s and his meteoric rise in the 1970s, and plenty of crushing disappointments and heart-stopping triumphs along the way, Neil Diamond has maintained an almost unthinkable level of superstardom for five straight decades. How did a poor Jewish kid from Brooklyn become one of the most universally adored showmen of all time? There’s only one way to tell it: a musical set to his era-defining smash hits that entranced the world.	2022-12-04	2024-06-30	Broadhurst Theatre	https://abeautifulnoisethemusical.com/	https://www.broadway.org/logos/shows/beautiful-noise-nd.jpeg	\N
3	Aladdin	Musical, Original	Based on the hit animated film, Disney's Aladdin tells the story of a street-smart urchin whose life changes suddenly when he meets a magical genie who can grant him three wishes. What he really wants is the hand of Princess Jasmine, but will that mean becoming something he's not? And can he elude the dangers that lurk around every corner?	2014-03-20	\N	New Amsterdam Theatre	https://aladdinthemusical.com/	https://www.broadway.org/logos/shows/aladdin_poster-july-2021.jpg	\N
4	Appropriate	Play, Original	It’s summer, the cicadas are singing, and the Lafayette family has returned to their late patriarch’s Arkansas home to deal with the remains of his estate. Toni (Sarah Paulson), the eldest daughter, hopes they’ll spend the weekend remembering and reconnecting over their beloved father. Bo (Corey Stoll), her brother, wants to recoup some of the funds he spent caring for Dad at the end of his life. But things take a turn when their estranged brother, Franz, appears late one night, and mysterious objects are discovered among the clutter. Suddenly, long-hidden secrets and buried resentments can’t be contained, and the family is forced to face the ghosts of their past.	2023-12-18	2024-06-23	Belasco Theatre	https://2st.com/shows/appropriate	https://www.broadway.org/logos/shows/appropriate.png	\N
5	Back to the Future: The Musical	Musical, Original	Based on the hit animated film, Disney's Aladdin tells the story of a street-smart urchin whose life changes suddenly when he meets a magical genie who can grant him three wishes. What he really wants is the hand of Princess Jasmine, but will that mean becoming something he's not? And can he elude the dangers that lurk around every corner?	2023-08-03	\N	Winter Garden Theatre	https://www.backtothefuturemusical.com/new-york/	https://www.broadway.org/logos/shows/backtothefuture-2024.jpeg	\N
6	Chicago	Musical, Comedy, Revival	In the Roaring Twenties, aspiring chorus girl Roxie Hart and fading vaudeville star Velma Kelly each face trial for murder. Both as cynical as they are sexy, the two women compete for the services of shady lawyer Billy Flynn, who promises to make them media celebrities and win them acquittals. With its killer score and all-new knock-’em-dead dance numbers, this deliciously lurid tale of adultery, murder and justice as showbiz packs some serious heat.	1996-11-14	\N	Ambassador Theatre	https://chicagothemusical.com/	https://www.broadway.org/logos/shows/chicago-2024-update.jpg	\N
7	Days of Wine and Roses	Musical, Original	A searing new musical about a couple falling in love in 1950’s New York and struggling against themselves to rebuild a family.	2024-01-28	2024-04-28	Studio 54	https://daysofwineandrosesbroadway.com/	https://www.broadway.org/logos/shows/daysofwineandroses-2023.jpg	\N
8	Doubt	Play, Drama, Revival	Sister Aloysius, the exacting principal of a Catholic school in a working-class part of the Bronx, is feared by students and colleagues alike. But when she suspects nefarious relations between the charismatic priest Father Flynn and a student, she’s forced to wrestle with what’s fact, what’s fiction, and how much she’ll risk to expose the difference—all the while wrestling with her own bone-deep doubts.	2024-03-07	2024-04-14	Todd Haimes Theatre	https://www.roundabouttheatre.org/get-tickets/2023-2024-season/doubt-a-parable/	https://www.broadway.org/logos/shows/doubt_2024.jpg	\N
9	Hadestown	Musical, Original	Welcome to HADESTOWN, where a song can change your fate. This acclaimed musical by singer-songwriter Anaïs Mitchell and director Rachel Chavkin is winner of 8 Tony Awards including Best Musical and the Grammy Award® for Best Musical Theater Album. It intertwines two mythic tales — that of young dreamers Orpheus and Eurydice, and that of King Hades and Queen Persephone — as it invites you on an unforgettable journey to the underworld and back. Performed by a vibrant ensemble of actors, singers and dancers,  HADESTOWN asks audiences to imagine how the world could be.	2019-04-17	\N	Walter Kerr Theatre	https://hadestown.com/	https://www.broadway.org/logos/shows/hadestown_poster-july-2021.jpg	\N
10	Hamilton	Musical, Original	From bastard orphan to Washington's right hand man, rebel to war hero, loving husband caught in the country's first sex scandal to Treasury head who made an untrusting world believe in the American economy, Hamilton is an exploration of a political mastermind. George Washington, Thomas Jefferson, Eliza Hamilton, and lifelong Hamilton friend and foe, Aaron Burr, all attend this revolutionary tale of America’s fiery past told through the sounds of the ever-changing nation we've become.	2015-08-06	\N	Richard Rodgers Theatre	https://hamiltonmusical.com/new-york/	https://www.broadway.org/logos/shows/hamilton_2023-06v2.jpg	\N
11	Harry Potter and the Cursed Child	Play, Drama, Original	Prepare to be on the edge of your seat as Harry, Ron and Hermione launch into a thrilling new adventure that begins 19 years later in a one show incarnation following its world premiere as a two-part play.	2018-04-22	\N	Lyric Theatre	https://www.harrypottertheplay.com/	https://www.broadway.org/logos/shows/harrypotter_poster_july-2021.jpg	\N
12	Kimberly Akimbo	Musical, Original	Kim is a bright and funny Jersey teen, who happens to look like a 72-year-old lady. And yet her aging condition may be the least of her problems. Forced to maneuver family secrets, borderline personalities, and possible felony charges, Kim is determined to find happiness in a world where not even time is on her side. Based on the play of the same name.	2022-11-10	2024-04-28		https://kimberlyakimbothemusical.com/	https://www.broadway.org/logos/shows/kimberly-akimbo_2022-10.png	\N
13	Merrily We Roll Along	Musical, Comedy, Revival	The story of how a composer's idealism and friendships were corrupted by success is told backwards, starting with the disillusioned present and ending with their optimistic college years, in Stephen Sondheim and George Furth's musical, which is suggested by the George S. Kaufman-Moss Hart play.	2023-10-10	2024-07-07	Hudson Theatre	https://merrilyonbroadway.com/	https://www.broadway.org/logos/shows/merrilyupdate2023.jpg	\N
14	MJ The Musical	Musical, Original	He is one of the greatest entertainers of all time. Now, Michael Jackson’s unique and unparalleled artistry has finally arrived on Broadway in a brand-new musical. Centered around the making of his 1992 Dangerous World Tour, and created by Tony Award(R)-winning Director/Choreographer Christopher Wheeldon and two-time Pulitzer Prize winner Lynn Nottage, MJ goes beyond the singular moves and signature sound of the star, offering a rare look at the creative mind and collaborative spirit that catapulted Jackson into legendary status. Turn it up, Broadway — MJ is here	2022-02-01	\N	Neil Simon Theatre	https://mjthemusical.com/	https://www.broadway.org/logos/shows/mj_poster-july-2021.jpg	\N
15	Moulin Rouge! The Musical	Musical, Original	Set in Montmartre Quarter of Paris, France, at the turn of the century, a world of indulgent beauty and unparalleled extravagance, of Bohemians and aristocrats, of boulevardiers and mademoiselles, Moulin Rouge! The Musical tells the fictional story of an ambitious, lovesick writer, Christian, and a dazzling, entrancing chanteuse, Satine. Their lives collide at the Moulin Rouge with its many characters, including the host Harold Zidler, the brilliant and starving artist Toulouse-Lautrec, the greatest tango dancer–and gigolo–in all of Paris, Santiago; the tempting Nini; and The Duke of Monroth, the wealthy and entitled patron of the club who thinks he can buy anything he wants...including love.	2019-07-25	\N	Al Hirschfeld Theatre	https://moulinrougemusical.com/new-york/home/	https://www.broadway.org/logos/shows/moulinrouge-2024.jpg	\N
16	Prayer for the French Republic	Play, Original	In 1944, a Jewish couple in Paris desperately awaits news of their missing family. More than 70 years later, the couple’s great-grandchildren find themselves facing the same question as their ancestors: “Are we safe?” Following five generations of a French Jewish family, Prayer For The French Republic is a sweeping look at history, home, and the effects of an ancient hatred.	2024-01-09	2024-03-03	Samuel J. Friedman Theatre	https://www.manhattantheatreclub.com/shows/2023-24-season/prayer-for-the-french-republic/	https://www.broadway.org/logos/shows/prayerlogo-2023.jpg	\N
17	Six	Musical, Original	Divorced, beheaded, died, divorced, beheaded, survived. From Tudor Queens to Pop Icons, the SIX wives of Henry VIII take the microphone to reclaim their identities out of the shadow of their infamous spouse – remixing five hundred years of historical heartbreak into a Euphoric Celebration of 21st century girl power! This new original musical is the global sensation that everyone is losing their head over!	2021-10-03	\N	Brooks Atkinson Theatre	https://sixonbroadway.com/	https://www.broadway.org/logos/shows/six-2021-aug.jpg	\N
18	Spamalot	Musical, Comedy, Revival	Lovingly ripped from the film classic, Monty Python and the Holy Grail, Spamalot has everything that makes a great knight at the theatre, from flying cows to killer rabbits, British royalty to French taunters, dancing girls, rubbery shrubbery, and of course, the lady of the lake.	2023-11-16	\N	St. James Theatre	https://spamalotthemusical.com/	https://www.broadway.org/logos/shows/spamalot-2023.jpg	\N
19	Sweeney Todd	Musical, Thriller, Revival	Sweeney Todd: The Demon Barber of Fleet Street, a deliciously thrilling story of revenge and retribution, continues our celebration of the titan of musical theater: Stephen Sondheim.\n\nAfter 15 years in exile, Sweeney Todd, an unsettling man with a mysterious past, arrives in a dark and gritty London, hungry for vengeance against the judge who destroyed his life. Todd joins forces with Mrs. Lovett, the unhinged proprietress of a failing pie shop, and together they develop a spinetingling plot to exact revenge. When the lights go down and the curtain goes up, you won’t dare look away.	2023-03-26	\N	Lunt-Fontanne Theatre	https://sweeneytoddbroadway.com/	https://www.broadway.org/logos/shows/sweeney-2024update.jpg	\N
20	The Book of Moron	Musical, Comedy, Original	A pair of mismatched Mormon missionaries, one serious and dedicated and the other socially awkward yet well meaning, are sent to Uganda to convert citizens to the Mormon religion.	2011-03-24	\N	Eugene O'Neill Theatre	https://bookofmormonbroadway.com/	https://www.broadway.org/logos/shows/bom2022keyart.jpg	\N
21	The Lion King	Musical, Original, Puppets	In the Pride Lands of Africa, a young lion named Simba becomes heir to the kingdom, but flees his home when tragedy falls on his family. After years in exile, he decides to return and fight to take his rightful place in the Circle of Life.	1997-11-13	\N	Minskoff Theatre	https://www.lionking.com/	https://www.broadway.org/logos/shows/lionking-2024.jpg	\N
22	The Notebook	Musical, Original	Relive the romance! Based on the best-selling novel that inspired the iconic film, this world premiere new musical is led by a powerhouse creative team, teaming up to stage a deeply moving portrait of the enduring power of love. Beginning with a whirlwind summer romance, the decades-long love story between a mill worker named Noah and a privileged debutante named Allie spans a lifetime—in spite of the differences that threaten to pull them apart.	2024-03-14	\N	Gerald Schoenfeld Theatre	https://notebookmusical.com/	https://www.broadway.org/logos/shows/thenotebook.jpeg	\N
23	Wicked	Musical, Original	Long before Dorothy arrives in Oz, there is another young woman born with emerald-green skin—smart, fiery, misunderstood and possessing an extraordinary talent. When she meets a bubbly blonde who is exceptionally popular, their initial rivalry turns into the unlikeliest of friendships… until the world decides to call one "good," and the other one "wicked.	2003-10-31	\N	Gershwin Theatre	https://wickedthemusical.com/	https://www.broadway.org/logos/shows/wicked_poster-july-2021.jpg	\N
\.


--
-- Data for Name: backend_profile; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.backend_profile (id, avatar, description, user_id) FROM stdin;
2		\N	5
3		\N	6
\.


--
-- Data for Name: backend_review; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.backend_review (id, rating, review_text, "timestamp", event_id, user_id) FROM stdin;
13	5		2024-03-24 18:35:01.810079+00	1	6
14	5		2024-03-24 19:24:04.002336+00	1	6
\.


--
-- Data for Name: backend_searchhistory; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.backend_searchhistory (id, search, "timestamp", search_type, user_id) FROM stdin;
\.


--
-- Data for Name: backend_suspendeduser; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.backend_suspendeduser (id, reason, suspended_at, unsuspended_at, is_suspended, user_id) FROM stdin;
\.


--
-- Data for Name: backend_userevent; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.backend_userevent (id, saved, event_id, user_id) FROM stdin;
10	t	1	5
11	t	1	6
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2024-03-14 01:25:08.495775+00	1	admin	2	[{"changed": {"name": "banned user", "object": "admin", "fields": ["Reason", "Unban at"]}}]	4	2
2	2024-03-14 01:25:19.482998+00	1	admin	2	[]	12	2
3	2024-03-14 01:41:58.662157+00	1	admin	2	[]	4	2
4	2024-03-14 01:42:09.069875+00	1	admin	3		12	2
5	2024-03-14 02:32:49.267452+00	1	admin	2	[{"added": {"name": "banned user", "object": "admin"}}]	4	2
6	2024-03-14 02:38:29.481433+00	4	admin	3		12	2
7	2024-03-14 03:35:36.839072+00	12	admin	3		12	2
8	2024-03-14 05:31:27.662414+00	1	admin	2	[{"added": {"name": "banned user", "object": "admin"}}]	4	2
9	2024-03-14 07:07:55.915362+00	1	admin	2	[{"added": {"name": "suspended user", "object": "admin"}}]	4	2
10	2024-03-14 07:08:09.38146+00	1	admin	2	[{"changed": {"name": "suspended user", "object": "admin", "fields": ["Is suspended"]}}]	4	2
11	2024-03-14 07:12:31.315775+00	1	admin	2	[]	4	2
12	2024-03-21 07:52:48.823057+00	3	fred	1	[{"added": {}}]	4	2
13	2024-03-21 07:52:58.162655+00	3	fred	2	[{"changed": {"fields": ["First name", "Last name", "Email address"]}}]	4	2
14	2024-03-21 17:47:07.045886+00	3	fred	3		4	5
15	2024-03-21 17:47:07.057754+00	4	fred1	3		4	5
16	2024-03-21 18:08:03.782186+00	6	fred	2	[{"changed": {"fields": ["password"]}}]	4	5
17	2024-03-21 18:09:05.734629+00	6	fred	2	[{"changed": {"fields": ["Active"]}}]	4	5
18	2024-03-21 22:34:19.344167+00	6	fred	2	[{"added": {"name": "suspended user", "object": "fred"}}]	4	5
19	2024-03-21 22:39:02.338697+00	1	Review object (1)	3		9	5
20	2024-03-21 22:39:08.721863+00	2	Review object (2)	3		9	5
21	2024-03-21 22:46:32.535076+00	6	fred	2	[{"added": {"name": "suspended user", "object": "fred"}}]	4	5
22	2024-03-21 22:48:23.324912+00	6	fred	2	[{"changed": {"fields": ["Active"]}}]	4	5
23	2024-03-21 22:48:52.824776+00	6	fred	2	[{"added": {"name": "suspended user", "object": "fred"}}]	4	5
24	2024-03-21 22:57:37.962095+00	8	fred	2	[{"changed": {"fields": ["Unsuspended at"]}}]	15	5
25	2024-03-21 22:58:05.06368+00	8	fred	3		15	5
26	2024-03-21 22:58:19.280948+00	4	Review object (4)	3		9	5
27	2024-03-21 22:58:19.286998+00	3	Review object (3)	3		9	5
28	2024-03-22 01:14:37.696252+00	6	fred	2	[{"changed": {"fields": ["Active"]}}, {"added": {"name": "suspended user", "object": "fred"}}]	4	5
29	2024-03-22 01:15:46.723522+00	5	Review object (5)	3		9	5
30	2024-03-22 01:16:14.762216+00	6	Review object (6)	3		9	5
31	2024-03-22 01:50:16.286997+00	6	fred	2	[{"added": {"name": "suspended user", "object": "fred"}}]	4	5
32	2024-03-22 01:56:49.401012+00	11	fred	3		15	5
33	2024-03-22 06:55:49.238433+00	1	fred	3		15	5
34	2024-03-22 17:30:21.279737+00	2	fred	3		15	5
35	2024-03-22 17:31:38.84435+00	12	Review object (12)	3		9	5
36	2024-03-22 17:31:38.853593+00	11	Review object (11)	3		9	5
37	2024-03-22 17:31:38.855478+00	10	Review object (10)	3		9	5
38	2024-03-22 17:31:38.857567+00	9	Review object (9)	3		9	5
39	2024-03-22 17:31:38.859666+00	8	Review object (8)	3		9	5
40	2024-03-22 17:31:38.861068+00	7	Review object (7)	3		9	5
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	backend	event
8	backend	userevent
9	backend	review
10	backend	chat
11	backend	userprofile
12	backend	banneduser
13	backend	blockeduser
14	admins	userblockstatus
15	backend	suspendeduser
16	backend	searchhistory
17	backend	profile
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2024-02-29 02:21:23.662463+00
2	auth	0001_initial	2024-02-29 02:21:23.72257+00
3	admin	0001_initial	2024-02-29 02:21:23.733567+00
4	admin	0002_logentry_remove_auto_add	2024-02-29 02:21:23.737128+00
5	admin	0003_logentry_add_action_flag_choices	2024-02-29 02:21:23.741627+00
6	contenttypes	0002_remove_content_type_name	2024-02-29 02:21:23.750837+00
7	auth	0002_alter_permission_name_max_length	2024-02-29 02:21:23.755983+00
8	auth	0003_alter_user_email_max_length	2024-02-29 02:21:23.76095+00
9	auth	0004_alter_user_username_opts	2024-02-29 02:21:23.764825+00
10	auth	0005_alter_user_last_login_null	2024-02-29 02:21:23.768507+00
11	auth	0006_require_contenttypes_0002	2024-02-29 02:21:23.770409+00
12	auth	0007_alter_validators_add_error_messages	2024-02-29 02:21:23.775228+00
13	auth	0008_alter_user_username_max_length	2024-02-29 02:21:23.78222+00
14	auth	0009_alter_user_last_name_max_length	2024-02-29 02:21:23.786317+00
15	auth	0010_alter_group_name_max_length	2024-02-29 02:21:23.792884+00
16	auth	0011_update_proxy_permissions	2024-02-29 02:21:23.798426+00
17	auth	0012_alter_user_first_name_max_length	2024-02-29 02:21:23.802369+00
18	sessions	0001_initial	2024-02-29 02:21:23.812628+00
19	backend	0001_initial	2024-02-29 04:18:23.590253+00
20	backend	0002_alter_event_category_alter_event_location	2024-03-11 00:35:39.921917+00
21	backend	0003_remove_userevent_liked	2024-03-11 00:35:39.945916+00
22	backend	0003_remove_event_availability	2024-03-11 00:35:39.955032+00
23	backend	0004_merge_20240307_2331	2024-03-11 00:35:39.95912+00
24	backend	0005_userprofile	2024-03-13 00:39:50.085189+00
25	backend	0006_banneduser_delete_userprofile	2024-03-13 01:33:25.548224+00
26	backend	0007_blockeduser_delete_banneduser	2024-03-13 04:34:58.774603+00
27	admins	0001_initial	2024-03-13 17:37:30.878345+00
28	backend	0005_banneduser	2024-03-14 00:07:27.594398+00
29	backend	0006_banneduser_unban_at	2024-03-14 00:28:34.605455+00
30	backend	0007_userprofile	2024-03-14 02:32:13.209313+00
31	backend	0008_suspendeduser_delete_userprofile	2024-03-14 06:54:08.364736+00
32	backend	0005_searchhistory	2024-03-21 07:54:06.078685+00
33	backend	0006_profile	2024-03-21 07:54:06.121839+00
34	backend	0007_alter_profile_avatar_alter_profile_description	2024-03-21 07:54:06.136461+00
35	backend	0008_rename_comment_review_review_text	2024-03-21 20:19:08.186023+00
36	backend	0009_suspendeduser_banneduser	2024-03-22 03:40:53.886618+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: nyu_event
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
ni7citaojjdm0uaqjlw1b03f5npbunvn	e30:1rnDIi:V6dQjm-8LgBxH1lJBvdsgtJcxxXuWIQpCI_jPhdJ7Z8	2024-04-04 07:57:24.243997+00
ncofr46f66ghhcugiya5en7hcfaochga	.eJxVjMEKwjAQRP8lZylJbNKkR6HfETabDQlqla4FRfx3W8hBTzPM481bBFgfJaxMS6hJjMKKw-8WAc8076C1riV30xXq5dT4n1SAy2YcISP4iAiUKA7a9LonY7NNSkfrpKFtRRdRZq8RIylnUzZuyAqt9rCfMjHX2xzoea_LS4zy8wWeFTvm:1roUMp:dK_07aw359pFQE7PF5nVtA4tAoM6UsQR9Vzz58tAAVQ	2024-04-07 20:22:55.149814+00
\.


--
-- Name: admins_userblockstatus_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.admins_userblockstatus_id_seq', 1, false);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 68, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 6, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: backend_banneduser_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.backend_banneduser_id_seq', 1, false);


--
-- Name: backend_chat_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.backend_chat_id_seq', 1, false);


--
-- Name: backend_event_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.backend_event_id_seq', 23, true);


--
-- Name: backend_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.backend_profile_id_seq', 3, true);


--
-- Name: backend_review_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.backend_review_id_seq', 14, true);


--
-- Name: backend_searchhistory_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.backend_searchhistory_id_seq', 1, false);


--
-- Name: backend_suspendeduser_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.backend_suspendeduser_id_seq', 3, true);


--
-- Name: backend_userevent_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.backend_userevent_id_seq', 12, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 40, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 17, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: nyu_event
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 36, true);


--
-- Name: admins_userblockstatus admins_userblockstatus_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.admins_userblockstatus
    ADD CONSTRAINT admins_userblockstatus_pkey PRIMARY KEY (id);


--
-- Name: admins_userblockstatus admins_userblockstatus_user_id_key; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.admins_userblockstatus
    ADD CONSTRAINT admins_userblockstatus_user_id_key UNIQUE (user_id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: backend_banneduser backend_banneduser_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_banneduser
    ADD CONSTRAINT backend_banneduser_pkey PRIMARY KEY (id);


--
-- Name: backend_banneduser backend_banneduser_user_id_key; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_banneduser
    ADD CONSTRAINT backend_banneduser_user_id_key UNIQUE (user_id);


--
-- Name: backend_chat backend_chat_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_chat
    ADD CONSTRAINT backend_chat_pkey PRIMARY KEY (id);


--
-- Name: backend_event backend_event_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_event
    ADD CONSTRAINT backend_event_pkey PRIMARY KEY (id);


--
-- Name: backend_profile backend_profile_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_profile
    ADD CONSTRAINT backend_profile_pkey PRIMARY KEY (id);


--
-- Name: backend_profile backend_profile_user_id_key; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_profile
    ADD CONSTRAINT backend_profile_user_id_key UNIQUE (user_id);


--
-- Name: backend_review backend_review_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_review
    ADD CONSTRAINT backend_review_pkey PRIMARY KEY (id);


--
-- Name: backend_searchhistory backend_searchhistory_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_searchhistory
    ADD CONSTRAINT backend_searchhistory_pkey PRIMARY KEY (id);


--
-- Name: backend_suspendeduser backend_suspendeduser_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_suspendeduser
    ADD CONSTRAINT backend_suspendeduser_pkey PRIMARY KEY (id);


--
-- Name: backend_suspendeduser backend_suspendeduser_user_id_key; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_suspendeduser
    ADD CONSTRAINT backend_suspendeduser_user_id_key UNIQUE (user_id);


--
-- Name: backend_userevent backend_userevent_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_userevent
    ADD CONSTRAINT backend_userevent_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: backend_chat_receiver_id_66aaa0ac; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX backend_chat_receiver_id_66aaa0ac ON public.backend_chat USING btree (receiver_id);


--
-- Name: backend_chat_sender_id_c38b3f54; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX backend_chat_sender_id_c38b3f54 ON public.backend_chat USING btree (sender_id);


--
-- Name: backend_review_event_id_44bd7c67; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX backend_review_event_id_44bd7c67 ON public.backend_review USING btree (event_id);


--
-- Name: backend_review_user_id_ee348b0d; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX backend_review_user_id_ee348b0d ON public.backend_review USING btree (user_id);


--
-- Name: backend_searchhistory_user_id_0b27f614; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX backend_searchhistory_user_id_0b27f614 ON public.backend_searchhistory USING btree (user_id);


--
-- Name: backend_userevent_event_id_65195e60; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX backend_userevent_event_id_65195e60 ON public.backend_userevent USING btree (event_id);


--
-- Name: backend_userevent_user_id_5a539d62; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX backend_userevent_user_id_5a539d62 ON public.backend_userevent USING btree (user_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: nyu_event
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: admins_userblockstatus admins_userblockstatus_user_id_67b19d74_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.admins_userblockstatus
    ADD CONSTRAINT admins_userblockstatus_user_id_67b19d74_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_banneduser backend_banneduser_user_id_233c9fae_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_banneduser
    ADD CONSTRAINT backend_banneduser_user_id_233c9fae_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_chat backend_chat_receiver_id_66aaa0ac_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_chat
    ADD CONSTRAINT backend_chat_receiver_id_66aaa0ac_fk_auth_user_id FOREIGN KEY (receiver_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_chat backend_chat_sender_id_c38b3f54_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_chat
    ADD CONSTRAINT backend_chat_sender_id_c38b3f54_fk_auth_user_id FOREIGN KEY (sender_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_profile backend_profile_user_id_8fc3ddb6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_profile
    ADD CONSTRAINT backend_profile_user_id_8fc3ddb6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_review backend_review_event_id_44bd7c67_fk_backend_event_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_review
    ADD CONSTRAINT backend_review_event_id_44bd7c67_fk_backend_event_id FOREIGN KEY (event_id) REFERENCES public.backend_event(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_review backend_review_user_id_ee348b0d_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_review
    ADD CONSTRAINT backend_review_user_id_ee348b0d_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_searchhistory backend_searchhistory_user_id_0b27f614_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_searchhistory
    ADD CONSTRAINT backend_searchhistory_user_id_0b27f614_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_suspendeduser backend_suspendeduser_user_id_079c734e_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_suspendeduser
    ADD CONSTRAINT backend_suspendeduser_user_id_079c734e_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_userevent backend_userevent_event_id_65195e60_fk_backend_event_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_userevent
    ADD CONSTRAINT backend_userevent_event_id_65195e60_fk_backend_event_id FOREIGN KEY (event_id) REFERENCES public.backend_event(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backend_userevent backend_userevent_user_id_5a539d62_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.backend_userevent
    ADD CONSTRAINT backend_userevent_user_id_5a539d62_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: nyu_event
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

